[{"/home/harry/Desktop/WorkSpace/Edimension/client-side/src/index.js":"1","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/reportWebVitals.js":"2","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/App.js":"3","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/store.js":"4","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components.js":"5","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/dashboard/reducer.js":"6","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/nav/Nav.jsx":"7","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/dashboard/Dashboard.js":"8","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/chat/Chat.js":"9","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/chat/ChatComponent.jsx":"10","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/dashboard/DashboardComponent.jsx":"11","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/chat/reducer.js":"12","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/actionTypes.js":"13","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/chat/action.js":"14","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/login/Login.js":"15","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/login/action.js":"16","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/common/Form.jsx":"17","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/common/Card.jsx":"18","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/utils/formdata.js":"19","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/login/reducer.js":"20","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/patient/reducer.js":"21","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/doctor/reducer.js":"22","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/doctor/Doctor.js":"23","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/patient/Patient.js":"24","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/doctor/DoctorComponent.jsx":"25","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/patient/PatientComponent.jsx":"26","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/service/api.js":"27","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/service/patient.js":"28","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/service/config.js":"29","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/service/login.js":"30","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/service/doctor.js":"31","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/service/message.js":"32","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/dashboard/action.js":"33","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/doctor/action.js":"34","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/patient/action.js":"35"},{"size":500,"mtime":1610218586358,"results":"36","hashOfConfig":"37"},{"size":362,"mtime":1610218586358,"results":"38","hashOfConfig":"37"},{"size":687,"mtime":1610443977743,"results":"39","hashOfConfig":"37"},{"size":604,"mtime":1610402930083,"results":"40","hashOfConfig":"37"},{"size":317,"mtime":1610427408235,"results":"41","hashOfConfig":"37"},{"size":0,"mtime":1610364597278,"results":"42","hashOfConfig":"37"},{"size":2114,"mtime":1610735051026,"results":"43","hashOfConfig":"37"},{"size":2783,"mtime":1610734572445,"results":"44","hashOfConfig":"37"},{"size":1121,"mtime":1610728765310,"results":"45","hashOfConfig":"37"},{"size":3186,"mtime":1610729987242,"results":"46","hashOfConfig":"37"},{"size":142,"mtime":1610363620542,"results":"47","hashOfConfig":"37"},{"size":1461,"mtime":1610732377734,"results":"48","hashOfConfig":"37"},{"size":492,"mtime":1610732139978,"results":"49","hashOfConfig":"37"},{"size":757,"mtime":1610732387850,"results":"50","hashOfConfig":"37"},{"size":2187,"mtime":1610728637881,"results":"51","hashOfConfig":"37"},{"size":257,"mtime":1610735772158,"results":"52","hashOfConfig":"37"},{"size":2866,"mtime":1610690722843,"results":"53","hashOfConfig":"37"},{"size":513,"mtime":1610368756686,"results":"54","hashOfConfig":"37"},{"size":1892,"mtime":1610692627468,"results":"55","hashOfConfig":"37"},{"size":1411,"mtime":1610736422925,"results":"56","hashOfConfig":"37"},{"size":1974,"mtime":1610728244079,"results":"57","hashOfConfig":"37"},{"size":671,"mtime":1610725376673,"results":"58","hashOfConfig":"37"},{"size":601,"mtime":1610734567265,"results":"59","hashOfConfig":"37"},{"size":1129,"mtime":1610734563825,"results":"60","hashOfConfig":"37"},{"size":1442,"mtime":1610727260520,"results":"61","hashOfConfig":"37"},{"size":5269,"mtime":1610731866029,"results":"62","hashOfConfig":"37"},{"size":633,"mtime":1610734669114,"results":"63","hashOfConfig":"37"},{"size":928,"mtime":1610726525578,"results":"64","hashOfConfig":"37"},{"size":1058,"mtime":1610734438227,"results":"65","hashOfConfig":"37"},{"size":425,"mtime":1610736271432,"results":"66","hashOfConfig":"37"},{"size":383,"mtime":1610726539647,"results":"67","hashOfConfig":"37"},{"size":404,"mtime":1610732269942,"results":"68","hashOfConfig":"37"},{"size":225,"mtime":1610732415409,"results":"69","hashOfConfig":"37"},{"size":149,"mtime":1610715913741,"results":"70","hashOfConfig":"37"},{"size":152,"mtime":1610725604940,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"rjliqq",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"74"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"74"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"74"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"74"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"74"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"/home/harry/Desktop/WorkSpace/Edimension/client-side/src/index.js",[],["151","152"],"/home/harry/Desktop/WorkSpace/Edimension/client-side/src/reportWebVitals.js",[],"/home/harry/Desktop/WorkSpace/Edimension/client-side/src/App.js",[],"/home/harry/Desktop/WorkSpace/Edimension/client-side/src/store.js",[],"/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components.js",[],"/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/dashboard/reducer.js",[],"/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/nav/Nav.jsx",["153","154","155"],"/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/dashboard/Dashboard.js",["156","157","158"],"/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/chat/Chat.js",["159"],"import React, { Component } from 'react';\nimport { Link, } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport {\n    openNewChatBox,\n    deleteChatBox,\n} from './action';\nimport { ChatList, ChatBox } from './ChatComponent';\nclass Chat extends Component{\n    render(){\n        return (\n            <div className=\"chat-container\">\n                <ChatList chatList={this.props.patientList} openChat={this.props.newChatBox} />\n                {Object.entries(this.props.activeChats).map(([key, item]) => (\n                    <ChatBox key={key} chatInfo={item} token={this.props.token} is_hospital={this.props.is_hospital} />\n                ))}\n            </div>\n        );\n    }\n}\n\nconst mapState = ({ chatState, patientState, userState }) => ({\n    activeChats: chatState.activeChats,\n    patientList: patientState.patients,\n    token: userState.token,\n    is_hospital: userState.is_hospital,\n});\nconst mapDispatch = (dispatch) => ({\n    newChatBox: (data)=>dispatch(openNewChatBox(data)),\n    delChatBox: (id)=>dispatch(deleteChatBox(id)),\n});\n\nexport default connect(mapState, mapDispatch)(Chat);","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/chat/ChatComponent.jsx",["160","161"],"import React, { useState, useRef, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { toggleChatBox, deleteChatBox } from './action';\n\nimport './Chat.css';\n\nimport {\n    newMessageAPI,\n    getMessagesAPI\n} from '../../service/api';\n\nconst ChatHeader = ({ name, online, avatar, onClick, onCross }) => (\n    <div className=\"chat-header\" onClick={onClick}>\n        { avatar && <img className=\"chat-avatar\" src={avatar} />}\n        <div className=\"chat-heading\"><div className=\"bold-text\">{name}</div></div>\n        <div className=\"chat-actions\">\n            <i className=\"fa fa-circle chat-status\" style={{color: online?'green':'#042F19'}}></i>\n            {onCross && <i className=\"fa fa-times chat-close\" style={{color: '#042F19'}} onClick={(event)=>{event.stopPropagation(); onCross()}}></i>}\n        </div>\n    </div>\n)\n\nconst ChatList = ({ chatList, openChat }) => {\n    const [active, setActive] = useState(false);\n\n    const ChatLabel = () => (\n        <div className=\"chat-label\" onClick={()=>setActive(!active)}><div className=\"text text-center\">Chat</div></div>\n    );\n    return (\n        <div className={\"chat-list-container\"+(active?' active':'')} onBlur={()=>setActive(false)}>\n            {active && <div className=\"chat-list\">\n            {chatList.map((item) => (\n                <ChatHeader key={item.id} {...item} onClick={()=>openChat(item)} />    \n                ))}\n            </div>}\n            <ChatLabel />\n        </div>\n    );\n};\n\nconst ChatBox = ({ chatInfo, token, is_hospital }) => {\n    const inputRef = useRef();\n    const dispatch = useDispatch();\n    const [ messages, setMessages ] = useState([]);\n    const active = useSelector((state)=>state.chatState.openChats[chatInfo.id]);\n    useEffect(()=>{\n        getMessagesAPI(chatInfo.id, token)\n        .then((data)=>{\n            setMessages(data);\n        })\n    }, [])\n    const sendMessage = () => {\n        let data = {\n            message: inputRef.current.value,\n            patient: chatInfo.id,\n            sender: is_hospital?\"hospital\":\"doctor\",\n        };\n        newMessageAPI(data, token).then((_data)=>{\n            setMessages([...messages, _data])\n            inputRef.current.value = \"\";\n        });\n        \n    }\n    return (\n        <div className={\"chat-box-container\"+ (active?\" active\":\"\")}>\n            <ChatHeader {...chatInfo} \n                onClick={()=>dispatch(toggleChatBox(chatInfo.id))}\n                onCross={()=>dispatch(deleteChatBox(chatInfo.id))}\n            />\n            {active && <>\n                <div className=\"chat-box\">\n                    {messages.map((msg) => (\n                        <div key={msg.id} className={msg.sender===\"hospital\"?\"left-msg\":\"right-msg\"}><div className=\"msg-text\">{msg.message}</div></div>\n                    ))}\n                </div>\n                <div className=\"chat-type\">\n                    <input type=\"text\" name=\"type_message\" id=\"chat-type\" ref={inputRef}/>\n                    <i className=\"fa fa-paper-plane\" style={{color: '#042F19'}} onClick={sendMessage}></i>\n                </div>\n            </>}\n        </div>\n    );\n};\n\nexport {\n    ChatBox,\n    ChatList,\n};","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/dashboard/DashboardComponent.jsx",[],"/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/chat/reducer.js",[],"/home/harry/Desktop/WorkSpace/Edimension/client-side/src/actionTypes.js",[],"/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/chat/action.js",[],"/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/login/Login.js",["162"],"\nimport React, { useEffect, useState } from 'react';\nimport Card from '../common/Card';\nimport Form from '../common/Form';\n\nimport { useHistory } from 'react-router-dom';\n\nimport { useDispatch } from 'react-redux';\n\nimport {\n    login,\n    logout,\n} from './action';\n\nimport {\n    loginForm ,\n    registrationForm\n} from '../../utils/formdata';\n\nimport {\n    loginAPI,\n    signupAPI,\n} from \"../../service/api\";\n\nexport default function Logout(){\n    const history = useHistory();\n\n    const [open, setOpen] = useState(false);\n    const [form, setForm] = useState([]);\n    const [which, setWhich] = useState(\"\")\n\n    const dispatch = useDispatch();\n    dispatch(logout());\n\n    const closePopup = async ({submit, form}) => {\n        if(submit){\n            if(which === \"login\"){\n                loginAPI(form)\n                .then((data)=>{\n                    dispatch(login({...data, is_hospital: form.is_hospital}));\n                    history.push('/');\n                })\n                .catch((error) => {\n                    dispatch(logout);\n                });\n            } else if(which === \"register\"){\n                signupAPI(form)\n                .then((data)=>{\n                    setOpen(false);\n                })\n                .catch((error) => {\n                    console.log(error);\n                });\n            }            \n        } else {\n            setOpen(false);\n        }\n    }   \n\n    const formPopup = (which)=>{\n        if(which === \"login\"){\n            setForm(loginForm);\n        } else {\n            setForm(registrationForm);\n        }\n        setWhich(which);\n        setOpen(true);\n    }\n\n    const list = [\n        {\n            title: 'Login to your account', \n            label: 'Login', \n            onclick: ()=>{formPopup(\"login\")},\n            haspopup: true\n        },\n        {\n            title: 'Register your self on platform',\n            label: 'Register', \n            onclick: ()=>{formPopup(\"register\")},\n            haspopup: true\n        },\n    ];\n\n    return (\n        <>\n            <Card list={list} />\n            <Form open={open} formItems={form} which={which} closePopup={closePopup} />\n        </>\n    );\n}\n","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/login/action.js",[],"/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/common/Form.jsx",[],"/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/common/Card.jsx",["163"],"import React from 'react';\nimport './Card.css';\n\nconst Card = ({item})=>(\n    <div className=\"card\">\n        <button \n            className=\"cardBtn\" \n            title={item.title}\n            aria-label={item.title}\n            aria-haspopup={item.haspopup||false}\n            onClick={item.onclick}\n        >{item.label}</button>\n    </div>\n);\n\nexport default ({list})=>(\n    <div className=\"container\">\n        {list.map((item, index)=>(\n            <Card key={index} item={item} />\n        ))}\n\n    </div>\n);","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/utils/formdata.js",[],"/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/login/reducer.js",[],"/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/patient/reducer.js",["164"],"import { \n    CURRPATIENT,\n    SETPATIENTS, \n} from '../../actionTypes';\n\nconst initalState = {\n    patients: [\n        // {\n        //     id: '1',\n        //     name: 'testuser1',\n        //     gender: 'male',\n        //     age: 35,\n        //     domain: ['ENT', ],\n        //     isAssigned: true,\n        //     doctorData: {\n        //         id: 'doc1',\n        //         name: 'doctor1',\n        //         specialist: [],\n        //     },\n        //     scans: [\n        //         {\n        //             date: \"10-01-2021\",\n        //             src: \"./img/scan1.jpeg\",\n        //             isReported: true,\n        //             report: \"this is the report for the scan demo demo!!\",\n        //         },\n        //         {\n        //             date: \"10-01-2021\",\n        //             src: \"./img/scan2.jpg\", \n        //             isReported: false,\n        //         },\n        //         {\n        //             date: \"10-01-2021\",\n        //             src: \"./img/scan3.jpg\",\n        //             isReported: false,\n        //         }, \n        //     ],\n        // },\n        // {\n        //     id: '2',\n        //     name : 'testuser2',\n        //     gender: 'female',\n        //     age: 42,\n        //     dateOfScan: '11-01-2021',\n        //     online: false,\n        //     domain: ['Skin', ],\n        //     isAssigned: false,\n        //     doctorData: {},\n        //     isReported: false,\n        //     scans: [],\n        // },\n    ],\n};\n\nconst reducer = (state = initalState, action) => {\n    switch(action.type){\n        case SETPATIENTS:\n            return {\n                ...state,\n                patients: [\n                    ...action.payload,\n                ]\n            }\n        // case CURRPATIENT:\n        //     return {\n        //         ...state,\n        //         currPatient: action.payload.id,\n        //     };\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/doctor/reducer.js",[],"/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/doctor/Doctor.js",[],"/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/patient/Patient.js",[],"/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/doctor/DoctorComponent.jsx",[],"/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/patient/PatientComponent.jsx",["165","166","167","168","169"],"import React, { useEffect, useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport HOST from '../../service/config';\nimport {\n    addScanAPI,\n    assignDoctorAPI,\n    addReportAPI,\n} from '../../service/api';\n\nimport './Patient.css';\n\nconst List = ({ list, onClick }) => (\n    <div className=\"list-container\">\n        {list.map((item, idx) => (\n            <div key={idx} className=\"list-row\" onClick={(event)=>{event.stopPropagation(); onClick(item);}}>\n                <div className=\"list-heading bold-text\">{item.name}</div>\n                <div className=\"list-info light-text\">Cause: {item.cause}</div>\n            </div>\n        ))}\n    </div>\n);\n\nconst Details = ({ token, is_hospital, patient, doctors }) => {\n    const patientData = [\n        [\"Name\", patient.name], \n        [\"Age\", patient.age],\n        [\"Sex\", patient.gender],\n        [\"Cause\", patient.cause]\n    ]\n    const [imgs, setImgs] = useState([]);\n    const [uploading, setUploading] = useState(false);\n    const fileinput = useRef();\n    const selectDoc = useRef();\n    const handleFileInputChange = () => {\n        let files = [ ...fileinput.current.files ];\n        setImgs([...imgs, ...files]);\n    };\n    const uploadScans = () => {\n        setUploading(true);\n        addScanAPI(imgs, patient.id, token)\n        .then((array) => {\n            setUploading(false);\n            setImgs([]);\n        }).catch((error)=>console.log(\"error:\", error));\n    }\n    return (\n        <div className=\"detail-container\">\n            <div className=\"detail-items\">\n                {patientData.map(([label, item], idx) => (\n                    <div className=\"detail-item-row\" key={idx}>\n                        <div className=\"detail-item-label text\">{label}</div>\n                        <div className=\"detail-item bold-text\">{item}</div>\n                    </div>\n                ))}\n            </div>\n            {is_hospital && <><div className=\"assign\">\n                {patient.isAssigned && <h5>This case is assigned to doctor {patient.doctor.name}.</h5>}\n                {!patient.isAssigned&&\n                <><h5>Assign Doctor to the case.</h5>\n                <select ref={selectDoc} name=\"doc\" id=\"assign-doc\" defaultValue=\"\">\n                <option value=\"\" > -- select -- </option>\n                    {doctors.map((item, idx)=>(\n                        <option key={idx} value={item.id}>{item.name}</option>\n                    ))}\n                </select>\n                <i className=\"fa fa-check\" onClick={()=>{assignDoctorAPI({doctor: selectDoc.current.value, patient: patient.id}, token)}}/>    \n                </>}\n            </div>\n            <div className=\"add-scan\">\n                <h5>Upload Scans</h5>\n                <input type=\"file\" multiple={true} name=\"scan\" id=\"input-scan\" hidden ref={fileinput} onChange={handleFileInputChange}/>\n                <img className=\"logo-img\" src=\"./img/plus.png\" alt=\"add scans\" onClick={()=>fileinput.current.click()} />\n            </div>\n            <div className=\"scan-upload\">\n                {imgs.map((img, idx) => (\n                    <div className=\"scan\" key={img.name+idx}>\n                        <div className=\"scan-img\">\n                            <img src={URL.createObjectURL(img)}/>\n                            <i className=\"fa fa-times img-delete\" onClick={()=>{setImgs(imgs.filter(_img=>_img!==img))}}/>    \n                        </div>\n                    </div>\n                ))}\n            </div>\n            {imgs.length!==0 && <button className=\"upload-btn\" onClick={uploadScans}>Upload</button>}\n            {uploading && <h5>Uploading</h5>}</>}\n        </div>\n    );\n}\n\nconst Reports = ({ scans, token, is_hospital }) => {\n    const inputRef = useRef();\n    const addReport = (id)=>{\n        let data = {\n            scan: id,\n            report: inputRef.current.value,\n        };\n        addReportAPI(data, token)\n        .then((data)=>console.log(data))\n        .catch((error)=>console.log(error))\n    };\n    return (\n        <div className=\"scans\">\n            {scans.length === 0 && <h5>No Scans available</h5>}\n            {scans.map((item) => (\n                <div className=\"scan\" key={item.id}>\n                    <div className=\"scan-img\">\n                        <img src={HOST + item.src}/>    \n                    </div>\n                    <div className=\"scan-data\">\n                        <div className=\"light-text\">Scanned on: {item.date}</div>\n                        {item.isReported &&<div className=\"text\">{item.report}</div>}\n                        {!is_hospital && !item.isReported && \n                        <div className=\"input-report\">\n                            <input ref={inputRef} type=\"text\" name=\"report\" id=\"input-report\"/>\n                            <i className=\"fa fa-check\" onClick={()=>{addReport(item.id)}} />\n                        </div>}\n                    </div>\n                </div>\n            ))}\n            \n        </div>\n    );\n};\n\nconst PatientData = ({ token, is_hospital, patient, doctors }) => (\n    <>\n        <Details {...{token, is_hospital, patient, doctors}} />\n        <Reports scans={patient.scans} {...{token, is_hospital}} />\n    </>\n)\n\nexport {\n    List,\n    PatientData,\n}","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/service/api.js",[],"/home/harry/Desktop/WorkSpace/Edimension/client-side/src/service/patient.js",["170"],"import {\n    API,\n    postFetcher,\n    getFetcher,\n    putFetcher,\n} from './config';\n\nconst addPatientAPI = (data, token)=>{\n    return postFetcher('addpatient/', data, token);\n};\n\nconst getPatientsAPI = (token) => getFetcher('getpatients/', token);\n\nconst addScanAPI = (imgs, patient, token) => {\n    const date = new Date();\n    return Promise.all(imgs.map(async (img) => {\n        let data = new FormData();\n        data.append('src', img, img.name);\n        data.append('date', date.toDateString());\n        data.append('patient', patient);\n        return await fetch(API+'addscan/', {\n            method: 'POST',\n            body: data,\n            headers: {\n                Authorization: `Token ${token}`,\n            }\n        });\n    }));\n};\n\nconst assignDoctorAPI = (data, token) => postFetcher('assigndoctor/', data, token);\n\nexport {\n    addPatientAPI,\n    getPatientsAPI,\n    addScanAPI,\n    assignDoctorAPI,   \n}","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/service/config.js",[],"/home/harry/Desktop/WorkSpace/Edimension/client-side/src/service/login.js",[],"/home/harry/Desktop/WorkSpace/Edimension/client-side/src/service/doctor.js",["171"],"import {\n    postFetcher,\n    getFetcher,\n    putFetcher,\n} from './config';\n\nconst getDoctorsAPI = (token) => getFetcher('getdoctors/', token);\n\nconst addReportAPI = (data, token) => postFetcher('addreport/', data, token);\n\nconst approveDoctorAPI = (data, token) => postFetcher('validatedoctor/', data, token);\n\nexport {\n    addReportAPI,\n    getDoctorsAPI,\n    approveDoctorAPI,\n};","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/service/message.js",[],"/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/dashboard/action.js",[],"/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/doctor/action.js",[],"/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/patient/action.js",[],{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","severity":1,"message":"177","line":1,"column":17,"nodeType":"178","messageId":"179","endLine":1,"endColumn":30},{"ruleId":"176","severity":1,"message":"180","line":9,"column":11,"nodeType":"178","messageId":"179","endLine":9,"endColumn":18},{"ruleId":"176","severity":1,"message":"181","line":10,"column":11,"nodeType":"178","messageId":"179","endLine":10,"endColumn":19},{"ruleId":"176","severity":1,"message":"182","line":8,"column":8,"nodeType":"178","messageId":"179","endLine":8,"endColumn":20},{"ruleId":"176","severity":1,"message":"183","line":26,"column":10,"nodeType":"178","messageId":"179","endLine":26,"endColumn":25},{"ruleId":"184","severity":1,"message":"185","line":88,"column":8,"nodeType":"186","endLine":88,"endColumn":10,"suggestions":"187"},{"ruleId":"176","severity":1,"message":"188","line":2,"column":10,"nodeType":"178","messageId":"179","endLine":2,"endColumn":14},{"ruleId":"189","severity":1,"message":"190","line":15,"column":21,"nodeType":"191","endLine":15,"endColumn":65},{"ruleId":"184","severity":1,"message":"192","line":52,"column":8,"nodeType":"186","endLine":52,"endColumn":10,"suggestions":"193"},{"ruleId":"176","severity":1,"message":"194","line":2,"column":17,"nodeType":"178","messageId":"179","endLine":2,"endColumn":26},{"ruleId":"195","severity":1,"message":"196","line":16,"column":1,"nodeType":"197","endLine":23,"endColumn":3},{"ruleId":"176","severity":1,"message":"198","line":2,"column":5,"nodeType":"178","messageId":"179","endLine":2,"endColumn":16},{"ruleId":"176","severity":1,"message":"194","line":1,"column":17,"nodeType":"178","messageId":"179","endLine":1,"endColumn":26},{"ruleId":"176","severity":1,"message":"199","line":2,"column":10,"nodeType":"178","messageId":"179","endLine":2,"endColumn":21},{"ruleId":"176","severity":1,"message":"200","line":2,"column":23,"nodeType":"178","messageId":"179","endLine":2,"endColumn":34},{"ruleId":"189","severity":1,"message":"190","line":79,"column":29,"nodeType":"191","endLine":79,"endColumn":66},{"ruleId":"189","severity":1,"message":"190","line":108,"column":25,"nodeType":"191","endLine":108,"endColumn":53},{"ruleId":"176","severity":1,"message":"201","line":5,"column":5,"nodeType":"178","messageId":"179","endLine":5,"endColumn":15},{"ruleId":"176","severity":1,"message":"201","line":4,"column":5,"nodeType":"178","messageId":"179","endLine":4,"endColumn":15},"no-native-reassign",["202"],"no-negated-in-lhs",["203"],"no-unused-vars","'useDebugValue' is defined but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'DashboardTag' is defined but never used.","'combineReducers' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'is_hospital', and 'token'. Either include them or remove the dependency array.","ArrayExpression",["204"],"'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'chatInfo.id' and 'token'. Either include them or remove the dependency array.",["205"],"'useEffect' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'CURRPATIENT' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'putFetcher' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},"Update the dependencies array to be: [dispatch, is_hospital, token]",{"range":"210","text":"211"},"Update the dependencies array to be: [chatInfo.id, token]",{"range":"212","text":"213"},[2558,2560],"[dispatch, is_hospital, token]",[1890,1892],"[chatInfo.id, token]"]