[{"/home/harry/Desktop/WorkSpace/Edimension/client-side/src/index.js":"1","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/reportWebVitals.js":"2","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/App.js":"3","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/store.js":"4","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components.js":"5","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/dashboard/reducer.js":"6","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/nav/Nav.jsx":"7","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/dashboard/Dashboard.js":"8","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/chat/Chat.js":"9","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/chat/ChatComponent.jsx":"10","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/dashboard/DashboardComponent.jsx":"11","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/chat/reducer.js":"12","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/actionTypes.js":"13","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/chat/action.js":"14","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/login/Login.js":"15","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/login/action.js":"16","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/common/Form.jsx":"17","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/common/Card.jsx":"18","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/utils/formdata.js":"19","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/login/reducer.js":"20","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/patient/reducer.js":"21","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/doctor/reducer.js":"22","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/doctor/Doctor.js":"23","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/patient/Patient.js":"24","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/doctor/DoctorComponent.jsx":"25","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/patient/PatientComponent.jsx":"26"},{"size":500,"mtime":1610218586358,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":1610218586358,"results":"29","hashOfConfig":"28"},{"size":687,"mtime":1610443977743,"results":"30","hashOfConfig":"28"},{"size":604,"mtime":1610402930083,"results":"31","hashOfConfig":"28"},{"size":317,"mtime":1610427408235,"results":"32","hashOfConfig":"28"},{"size":0,"mtime":1610364597278,"results":"33","hashOfConfig":"28"},{"size":1371,"mtime":1610362748156,"results":"34","hashOfConfig":"28"},{"size":1044,"mtime":1610377240342,"results":"35","hashOfConfig":"28"},{"size":989,"mtime":1610385024793,"results":"36","hashOfConfig":"28"},{"size":2335,"mtime":1610385040124,"results":"37","hashOfConfig":"28"},{"size":142,"mtime":1610363620542,"results":"38","hashOfConfig":"28"},{"size":1277,"mtime":1610359608344,"results":"39","hashOfConfig":"28"},{"size":420,"mtime":1610398941255,"results":"40","hashOfConfig":"28"},{"size":623,"mtime":1610358566241,"results":"41","hashOfConfig":"28"},{"size":1878,"mtime":1610377221435,"results":"42","hashOfConfig":"28"},{"size":257,"mtime":1610365028286,"results":"43","hashOfConfig":"28"},{"size":2892,"mtime":1610370917228,"results":"44","hashOfConfig":"28"},{"size":513,"mtime":1610368756686,"results":"45","hashOfConfig":"28"},{"size":1238,"mtime":1610370796369,"results":"46","hashOfConfig":"28"},{"size":708,"mtime":1610371313573,"results":"47","hashOfConfig":"28"},{"size":1878,"mtime":1610449825867,"results":"48","hashOfConfig":"28"},{"size":454,"mtime":1610445702681,"results":"49","hashOfConfig":"28"},{"size":381,"mtime":1610427476071,"results":"50","hashOfConfig":"28"},{"size":790,"mtime":1610441972079,"results":"51","hashOfConfig":"28"},{"size":1095,"mtime":1610445740348,"results":"52","hashOfConfig":"28"},{"size":3767,"mtime":1610442720173,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"rjliqq",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"56"},"/home/harry/Desktop/WorkSpace/Edimension/client-side/src/index.js",[],["113","114"],"/home/harry/Desktop/WorkSpace/Edimension/client-side/src/reportWebVitals.js",[],"/home/harry/Desktop/WorkSpace/Edimension/client-side/src/App.js",[],"/home/harry/Desktop/WorkSpace/Edimension/client-side/src/store.js",[],"/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components.js",[],"/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/dashboard/reducer.js",[],"/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/nav/Nav.jsx",[],"/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/dashboard/Dashboard.js",["115","116"],"import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector} from 'react-redux';\n\nimport Chat from '../chat/Chat';\nimport Card from '../common/Card';\nimport DashboardTag from './DashboardComponent';\n\nconst Dashboard = (props) => {\n    const history = useHistory();\n    const isLoggedIn = useSelector((state)=>state.userState.isLoggedIn);\n    if(!isLoggedIn)history.push('/login');\n    const list = [\n        {\n            title: 'Add new patient',\n            label: 'Add Patient',\n            onclick: () => {},\n            haspopup: true,\n        },\n        {\n            title: 'List of all cases',\n            label: 'All Patients',\n            onclick: () => {},\n            haspopup: false,\n        },\n        {\n            title: 'List of all doctors',\n            label: 'All Doctors',\n            onclick: () => {},\n            haspopup: false,\n        }\n    ]\n    return (\n        <>\n            <Card list={list} />\n            <Chat />\n        </>\n    );\n};\n\nexport default Dashboard;","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/chat/Chat.js",["117"],"import React, { Component } from 'react';\nimport { Link, } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport {\n    openNewChatBox,\n    deleteChatBox,\n} from './action';\nimport { ChatList, ChatBox } from './ChatComponent';\nclass Chat extends Component{\n    render(){\n        \n        return (\n            <div className=\"chat-container\">\n                <ChatList chatList={this.props.patientList} openChat={this.props.newChatBox} />\n                {Object.entries(this.props.activeChats).map(([key, item]) => (\n                    <ChatBox key={key} chatInfo={item} />\n                ))}\n            </div>\n        );\n    }\n}\n\nconst mapState = ({ chatState, patientState }) => ({\n    activeChats: chatState.activeChats,\n    patientList: patientState.patients,\n});\nconst mapDispatch = (dispatch) => ({\n    newChatBox: (data)=>dispatch(openNewChatBox(data)),\n    delChatBox: (id)=>dispatch(deleteChatBox(id)),\n});\n\nexport default connect(mapState, mapDispatch)(Chat);","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/chat/ChatComponent.jsx",["118"],"import React, { useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { toggleChatBox, deleteChatBox } from './action';\n\nimport './Chat.css';\n\nconst ChatHeader = ({ name, online, avatar, onClick, onCross }) => (\n    <div className=\"chat-header\" onClick={onClick}>\n        { avatar && <img className=\"chat-avatar\" src={avatar} />}\n        <div className=\"chat-heading\"><div className=\"bold-text\">{name}</div></div>\n        <div className=\"chat-actions\">\n            <i className=\"fa fa-circle chat-status\" style={{color: online?'green':'#042F19'}}></i>\n            {onCross && <i className=\"fa fa-times chat-close\" style={{color: '#042F19'}} onClick={(event)=>{event.stopPropagation(); onCross()}}></i>}\n        </div>\n    </div>\n)\n\nconst ChatList = ({ chatList, openChat }) => {\n    const [active, setActive] = useState(false);\n\n    const ChatLabel = () => (\n        <div className=\"chat-label\" onClick={()=>setActive(!active)}><div className=\"text text-center\">Chat</div></div>\n    );\n    return (\n        <div className={\"chat-list-container\"+(active?' active':'')} onBlur={()=>setActive(false)}>\n            {active && <div className=\"chat-list\">\n            {chatList.map((item) => (\n                <ChatHeader key={item.id} {...item} onClick={()=>openChat(item)} />    \n                ))}\n            </div>}\n            <ChatLabel />\n        </div>\n    );\n};\n\nconst ChatBox = ({ chatInfo }) => {\n    const inputRef = useRef();\n    const dispatch = useDispatch();\n    const active = useSelector((state)=>state.chatState.openChats[chatInfo.id]);\n    const [message, setMessage] = useState(undefined);\n    return (\n        <div className={\"chat-box-container\"+ (active?\" active\":\"\")}>\n            <ChatHeader {...chatInfo} \n                onClick={()=>dispatch(toggleChatBox(chatInfo.id))}\n                onCross={()=>dispatch(deleteChatBox(chatInfo.id))}\n            />\n            {active && <><div className=\"chat-box\">heh{message}</div>\n            <div className=\"chat-type\">\n                <input type=\"text\" name=\"type_message\" id=\"chat-type\" ref={inputRef}/>\n                <i className=\"fa fa-paper-plane\" style={{color: '#042F19'}} onClick={()=>setMessage(inputRef.current.value)}></i>\n            </div></>}\n        </div>\n    );\n};\n\nexport {\n    ChatBox,\n    ChatList,\n};","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/dashboard/DashboardComponent.jsx",[],"/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/chat/reducer.js",[],"/home/harry/Desktop/WorkSpace/Edimension/client-side/src/actionTypes.js",[],"/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/chat/action.js",[],"/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/login/Login.js",[],"/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/login/action.js",[],"/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/common/Form.jsx",[],"/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/common/Card.jsx",["119"],"import React from 'react';\nimport './Card.css';\n\nconst Card = ({item})=>(\n    <div className=\"card\">\n        <button \n            className=\"cardBtn\" \n            title={item.title}\n            aria-label={item.title}\n            aria-haspopup={item.haspopup||false}\n            onClick={item.onclick}\n        >{item.label}</button>\n    </div>\n);\n\nexport default ({list})=>(\n    <div className=\"container\">\n        {list.map((item, index)=>(\n            <Card key={index} item={item} />\n        ))}\n\n    </div>\n);","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/utils/formdata.js",[],"/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/login/reducer.js",[],"/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/patient/reducer.js",["120"],"import { \n    CURRPATIENT,\n    SETPATIENT, \n} from '../../actionTypes';\nconst initalState = {\n    patients: [\n        {\n            id: '1',\n            name: 'testuser1',\n            gender: 'male',\n            age: 35,\n            domain: ['ENT', ],\n            isAssigned: true,\n            doctorData: {\n                id: 'doc1',\n                name: 'doctor1',\n                specialist: [],\n            },\n            scans: [\n                {\n                    date: \"10-01-2021\",\n                    src: \"./img/scan1.jpeg\",\n                    isReported: true,\n                    report: \"this is the report for the scan demo demo!!\",\n                },\n                {\n                    date: \"10-01-2021\",\n                    src: \"./img/scan2.jpg\", \n                    isReported: false,\n                },\n                {\n                    date: \"10-01-2021\",\n                    src: \"./img/scan3.jpg\",\n                    isReported: false,\n                }, \n            ],\n        },\n        {\n            id: '2',\n            name : 'testuser2',\n            gender: 'female',\n            age: 42,\n            dateOfScan: '11-01-2021',\n            online: false,\n            domain: ['Skin', ],\n            isAssigned: false,\n            doctorData: {},\n            isReported: false,\n            scans: [],\n        },\n    ],\n};\n\nconst reducer = (state = initalState, action) => {\n    switch(action.type){\n        case SETPATIENT:\n            return {\n                ...state,\n                patients: {\n                    ...state.patients,\n                    ...action.payload,\n                }\n            }\n        // case CURRPATIENT:\n        //     return {\n        //         ...state,\n        //         currPatient: action.payload.id,\n        //     };\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/doctor/reducer.js",[],"/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/doctor/Doctor.js",[],"/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/patient/Patient.js",[],"/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/doctor/DoctorComponent.jsx",[],"/home/harry/Desktop/WorkSpace/Edimension/client-side/src/components/patient/PatientComponent.jsx",["121","122","123","124","125"],"import React, { useEffect, useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport './Patient.css';\n\nconst List = ({ list, onClick }) => (\n    <div className=\"list-container\">\n        {list.map((item, idx) => (\n            <div key={idx} className=\"list-row\" onClick={(event)=>{event.stopPropagation(); onClick(item);}}>\n                <div className=\"list-heading bold-text\">{item.name}</div>\n                <div className=\"list-info light-text\">Cause: {item.domain.join(\", \")}</div>\n            </div>\n        ))}\n    </div>\n);\n\nconst Details = ({ patient, doctors }) => {\n    const patientData = [\n        [\"Name\", patient.name], \n        [\"Age\", patient.age],\n        [\"Sex\", patient.gender],\n        [\"Cause\", patient.domain.join(\", \")]\n    ]\n    const [imgs, setImgs] = useState([]);\n    const fileinput = useRef();\n    const handleFileInputChange = () => {\n        let files = [ ...fileinput.current.files ];\n        files = files.map((item)=>({ img: URL.createObjectURL(item), name: item.name}));\n        console.log(files);\n        setImgs([...imgs, ...files]);\n    };\n    console.log(doctors);\n    return (\n        <div className=\"detail-container\">\n            <div className=\"detail-items\">\n                {patientData.map(([label, item], idx) => (\n                    <div className=\"detail-item-row\" key={idx}>\n                        <div className=\"detail-item-label text\">{label}</div>\n                        <div className=\"detail-item bold-text\">{item}</div>\n                    </div>\n                ))}\n            </div>\n            <div className=\"assign\">\n                {patient.isAssigned && <h5>This case is assigned to doctor {patient.doctorData.name}.</h5>}\n                {!patient.isAssigned&&\n                <><h5>Assign Doctor to the case.</h5>\n                <select name=\"doc\" id=\"assign-doc\">\n                    {doctors.map((item, idx)=>(\n                        <option key={idx} value={item.id}>{item.name}</option>\n                    ))}\n                </select></>}\n            </div>\n            <div className=\"add-scan\">\n                <h5>Upload Scans</h5>\n                <input type=\"file\" multiple={true} name=\"scan\" id=\"input-scan\" hidden ref={fileinput} onChange={handleFileInputChange}/>\n                <img className=\"logo-img\" src=\"./img/plus.png\" alt=\"add scans\" onClick={()=>fileinput.current.click()} />\n            </div>\n            <div className=\"scan-upload\">\n                {imgs.map((item, idx) => (\n                    <div className=\"scan\" key={item.name+idx}>\n                        <div className=\"scan-img\">\n                            <img src={item.img}/>\n                            <i className=\"fa fa-times img-delete\" />    \n                        </div>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nconst Reports = ({ scans }) => {\n    console.log(scans);\n    return (\n        <div className=\"scans\">\n            {scans.length === 0 && <h5>No Scans available</h5>}\n            {scans.map((item, idx) => (\n                <div className=\"scan\" key={idx}>\n                    <div className=\"scan-img\">\n                        <img src={item.src}/>    \n                    </div>\n                    <div className=\"scan-data\">\n                        <div className=\"light-text\">Scanned on: {item.date}</div>\n                        {item.isReported &&<div className=\"text\">{item.report}</div>}\n                    </div>\n                </div>\n            ))}\n            \n        </div>\n    );\n};\n\nconst PatientData = ({ patient, doctors }) => (\n    <>\n        <Details {...{patient, doctors}} />\n        <Reports scans={patient.scans} />\n    </>\n)\n\nexport {\n    List,\n    PatientData,\n}",{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":3,"column":10,"nodeType":"132","messageId":"133","endLine":3,"endColumn":21},{"ruleId":"130","severity":1,"message":"134","line":7,"column":8,"nodeType":"132","messageId":"133","endLine":7,"endColumn":20},{"ruleId":"130","severity":1,"message":"135","line":2,"column":10,"nodeType":"132","messageId":"133","endLine":2,"endColumn":14},{"ruleId":"136","severity":1,"message":"137","line":10,"column":21,"nodeType":"138","endLine":10,"endColumn":65},{"ruleId":"139","severity":1,"message":"140","line":16,"column":1,"nodeType":"141","endLine":23,"endColumn":3},{"ruleId":"130","severity":1,"message":"142","line":2,"column":5,"nodeType":"132","messageId":"133","endLine":2,"endColumn":16},{"ruleId":"130","severity":1,"message":"143","line":1,"column":17,"nodeType":"132","messageId":"133","endLine":1,"endColumn":26},{"ruleId":"130","severity":1,"message":"131","line":2,"column":10,"nodeType":"132","messageId":"133","endLine":2,"endColumn":21},{"ruleId":"130","severity":1,"message":"144","line":2,"column":23,"nodeType":"132","messageId":"133","endLine":2,"endColumn":34},{"ruleId":"136","severity":1,"message":"137","line":62,"column":29,"nodeType":"138","endLine":62,"endColumn":50},{"ruleId":"136","severity":1,"message":"137","line":80,"column":25,"nodeType":"138","endLine":80,"endColumn":46},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"no-unused-vars","'useDispatch' is defined but never used.","Identifier","unusedVar","'DashboardTag' is defined but never used.","'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'CURRPATIENT' is defined but never used.","'useEffect' is defined but never used.","'useSelector' is defined but never used.","no-global-assign","no-unsafe-negation"]